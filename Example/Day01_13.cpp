#include <iostream>

using namespace std;

int main() {
  // int x = 15;
  int x = 25;
//  if (0 < x < 20) { // 이 문법은 x가 0과 20 사이에 있는 수가 아니더라도 실행한다. // 경고 메시지 : 이 논리식 표현에 있어서 이 논리식 표현의 값이 항상 참 값이라고 출력된다. // 그 이유는 기본적으로 C 언어를 포함해서 대부분의 프로그래밍 언어에서는 조건 연산자가 반복적으로 사용되면 순차적으로 처리한다는 특징이 있다. // 먼저 이 x가 0보다 큰지를 측정한다. 그래서 x가 0보다 크다면 true 값으로 바뀌어서 true < 20이 된다. 그 다음 만약에 x가 0 이하라면 false 값이 들어가 false < 20이 된다. // C++ 같은 경우는 true 값은 1, false 값은 0으로 처리되기 때문에 true, false가 들어오든 항상 값이 20보다 작다. 그렇기 때문에 이거는 전체적으로 항상 true 값을 가지게 된다. 그렇기 때문에 다음 라인이 무조건적으로 수행되는 게 파이썬과 다른 점이다.
  if (0 < x && x < 20) {
    cout << "0 < x < 20" << '\n';
  }
}

// 다시 말해서, C 언어 및 Java에서는 이런 식(0 < x < 20)으로 부등식을 작성하게 되면, 이쪽은 무조건 true 값을 가지기 때문에 예기치 못한 결과가 발생할 수 있다.
// 그래서 이제 C++ 같은 경우는, &를 2 번 넣어 줘서 and라는 의미를 알려 줄 수 있어야 한다. // 파이썬에서는 and와 같은 논리 연산자를 사용하지 않아도 수학에서의 부등식을 그대로(0 < x < 20) 이용해도 x가 0과 20 사이의 수인지를 검증하는 것이라고 자동으로 인식해 줘서 예기치 못한 상황이 발생하지 않도록 해 준다.
