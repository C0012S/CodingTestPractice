"""
메모이제이션 (Memoization)
  - 메모이제이션은 다이나믹 프로그래밍을 구현하는 방법 중 하나입니다.
  - 한 번 계산한 결과를 메모리 공간에 메모하는 기법입니다.
    - 같은 문제를 다시 호출하면 메모했던 결과를 그대로 가져옵니다.
    - 값을 기록해 놓는다는 점에서 캐싱(Caching)이라고도 합니다.


탑다운 VS 보텀업
  - 탑다운(메모이제이션) 방식은 하향식이라고도 하며 보텀업 방식은 상향식이라고도 합니다.
  - 다이나믹 프로그래밍의 전형적인 형태는 보텀업 방식입니다.
    - 결과 저장용 리스트는 DP 테이블이라고 부릅니다.
  - 엄밀히 말하면 메모이제이션은 이전에 계산된 결과를 일시적으로 기록해 놓는 넓은 개념을 의미합니다.
    - 따라서 메모이제이션은 다이나믹 프로그래밍에 국한된 개념은 아닙니다.
    - 한 번 계산된 결과를 담아 놓기만 하고 다이나믹 프로그래밍을 위해 활용하지 않을 수도 있습니다.
"""


# 피보나치 수열 : 탑다운 다이나믹 프로그래밍 소스 코드 (Python)

# 한 번 계산된 결과를 메모이제이션(Memoization)하기 위한 리스트 초기화
d = [0] * 100

# 피보나치 함수(Fibonacci Function)를 재귀함수로 구현(탑다운 다이나믹 프로그래밍)
def fibo(x):
  # 종료 조건(1 혹은 2일 때 1을 반환)
  if x == 1 or x == 2:
    return 1
  # 이미 계산한 적 있는 문제라면 그대로 반환
  if d[x] != 0:
    return d[x]
  # 아직 계산하지 않은 문제라면 점화식에 따라서 피보나치 결과 반환
  d[x] = fibo(x - 1) + fibo(x - 2)
  return d[x]

print(fibo(99))
